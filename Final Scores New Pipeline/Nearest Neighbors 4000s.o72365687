Sender: LSF System <lsfadmin@eu-ms-014-07>
Subject: Job 72365687: <python main.py -ut 'Nearest Neighbor'> in cluster <euler> Done

Job <python main.py -ut 'Nearest Neighbor'> was submitted from host <eu-login-05-ng> by user <morathba> in cluster <euler> at Mon Sep  3 18:23:44 2018.
Job was executed on host(s) <eu-ms-014-07>, in queue <normal.4h>, as user <morathba> in cluster <euler> at Mon Sep  3 18:24:05 2018.
</cluster/home/morathba> was used as the home directory.
</cluster/home/morathba/4Ps-Plunder-Planet/4Ps> was used as the working directory.
Started at Mon Sep  3 18:24:05 2018.
Terminated at Mon Sep  3 19:40:45 2018.
Results reported at Mon Sep  3 19:40:45 2018.

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input
python main.py -ut 'Nearest Neighbor'
------------------------------------------------------------

Successfully completed.

Resource usage summary:

    CPU time :                                   4665.73 sec.
    Max Memory :                                 489 MB
    Average Memory :                             410.28 MB
    Total Requested Memory :                     1024.00 MB
    Delta Memory :                               535.00 MB
    Max Swap :                                   -
    Max Processes :                              3
    Max Threads :                                4
    Run time :                                   4601 sec.
    Turnaround time :                            4621 sec.

The output (if any) follows:

Using TensorFlow backend.
Feature matrix already cached!
Feature matrix and labels created!

################# Calculating performance with hyperparameter tuning #################

Doing RandomizedSearchCV with n_iter=1500 for Nearest Neighbor...
Time elapsed for hyperparameter tuning: 4590.425956726074
******** Scores of best 3 hyperparameter configurations ********
	Model with rank: 1
		Mean validation score: 0.639 (std: 0.012)
		Parameters: {'kneighborsclassifier__metric': 'minkowski', 'kneighborsclassifier__n_neighbors': 702}
	Model with rank: 2
		Mean validation score: 0.639 (std: 0.012)
		Parameters: {'kneighborsclassifier__metric': 'minkowski', 'kneighborsclassifier__n_neighbors': 703}
	Model with rank: 3
		Mean validation score: 0.639 (std: 0.012)
		Parameters: {'kneighborsclassifier__metric': 'minkowski', 'kneighborsclassifier__n_neighbors': 694}
	Model with rank: 3
		Mean validation score: 0.639 (std: 0.012)
		Parameters: {'kneighborsclassifier__metric': 'euclidean', 'kneighborsclassifier__n_neighbors': 694}

Calculating performance of Nearest Neighbor...

******** Scores for Nearest Neighbor (Windows:  20, 10, 30) ******** 

	Hyperparameters: {'n_neighbors': 702, 'metric': 'minkowski'},
	roc_auc: 0.645 (+-0.06), recall: 0.631 (+-0.20), specificity: 0.622 (+-0.23), precision: 0.304 (+-0.10), f1: 0.378 (+-0.08) 

	Confusion matrix: 	 [2906 1780] 
				 [386 648]


Time elapsed: 4594.012718915939
