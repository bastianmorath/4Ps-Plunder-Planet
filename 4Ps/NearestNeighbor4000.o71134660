Using TensorFlow backend.
Loading dataframes...
Feature matrix already cached!
Feature matrix and labels created!

################# Calculating performance with hyperparameter tuning #################

Doing RandomizedSearchCV with n_iter=1500 for Nearest Neighbor...
Time elapsed for hyperparameter tuning: 4106.000402212143
******** Scores of best 3 hyperparameter configurations ********
	Model with rank: 1
		Mean validation score: 0.646 (std: 0.017)
		Parameters: {'kneighborsclassifier__metric': 'manhattan', 'kneighborsclassifier__n_neighbors': 762}
	Model with rank: 2
		Mean validation score: 0.646 (std: 0.017)
		Parameters: {'kneighborsclassifier__metric': 'manhattan', 'kneighborsclassifier__n_neighbors': 761}
	Model with rank: 3
		Mean validation score: 0.646 (std: 0.017)
		Parameters: {'kneighborsclassifier__metric': 'manhattan', 'kneighborsclassifier__n_neighbors': 764}

Calculating performance of Nearest Neighbor...
	This classifier doesn't implement decision_function(), thus no precision_recall curve can be generated

******** Scores for Nearest Neighbor (Windows:  20, 10, 30) ******** 

	Hyperparameters: {'kneighborsclassifier__n_neighbors': 762, 'kneighborsclassifier__metric': 'manhattan'},
	roc_auc: 0.657 (+-0.01), recall: 0.535 (+-0.05), specificity: 0.720 (+-0.08), precision: 0.309 (+-0.07) 

	Confusion matrix: 	 [3367 1319] 
				 [485 549]


Time elapsed: 4109.342435836792
