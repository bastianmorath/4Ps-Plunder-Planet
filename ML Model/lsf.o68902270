Using TensorFlow backend.
/cluster/home/morathba/.local/lib64/python3.6/site-packages/sklearn/metrics/classification.py:1135: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples.
  'precision', 'predicted', average, warn_for)
/cluster/home/morathba/.local/lib64/python3.6/site-packages/sklearn/metrics/classification.py:1135: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples.
  'precision', 'predicted', average, warn_for)
/cluster/home/morathba/.local/lib64/python3.6/site-packages/sklearn/metrics/classification.py:1135: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples.
  'precision', 'predicted', average, warn_for)
/cluster/home/morathba/.local/lib64/python3.6/site-packages/sklearn/metrics/classification.py:1135: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples.
  'precision', 'predicted', average, warn_for)
/cluster/home/morathba/.local/lib64/python3.6/site-packages/sklearn/metrics/classification.py:1135: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples.
  'precision', 'predicted', average, warn_for)
Loading dataframes...
Feature matrix already cached!
Feature matrix and labels created!

################# Calculating performance with hyperparameter tuning #################

Doing RandomizedSearchCV with n_iter=350 for Nearest Neighbor...
Time elapsed for hyperparameter tuning: 1805.1113831996918
******** Scores of best 3 hyperparameter configurations ********
	Model with rank: 1
		Mean validation score: 0.652 (std: 0.040)
		Parameters: {'metric': 'minkowski', 'n_neighbors': 418}
	Model with rank: 1
		Mean validation score: 0.652 (std: 0.040)
		Parameters: {'metric': 'minkowski', 'n_neighbors': 418}
	Model with rank: 3
		Mean validation score: 0.652 (std: 0.042)
		Parameters: {'metric': 'euclidean', 'n_neighbors': 755}

Calculating performance of Nearest Neighbor...
	This classifier doesn't implement decision_function(), thus no precision_recall curve can be generated

******** Scores for Nearest Neighbor (Windows:  10, 5, 10) ******** 

	Hyperparameters: {'n_neighbors': 418, 'metric': 'minkowski'},
	roc_auc: 0.652 (+-0.04), recall: 0.000 (+-0.00), specificity: 1.000, precision: 0.000 (+-0.00) 

	Confusion matrix: 	 [4780    0] 
				 [1049    0]


Time elapsed: 1823.9966824054718
