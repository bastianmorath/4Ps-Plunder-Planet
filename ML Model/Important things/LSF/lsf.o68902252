Using TensorFlow backend.
Loading dataframes...
Feature matrix already cached!
Feature matrix and labels created!

################# Calculating performance with hyperparameter tuning #################

Doing RandomizedSearchCV with n_iter=10000 for Decision Tree...
Time elapsed for hyperparameter tuning: 1228.9238729476929
******** Scores of best 3 hyperparameter configurations ********
	Model with rank: 1
		Mean validation score: 0.655 (std: 0.022)
		Parameters: {'criterion': 'gini', 'max_depth': 5, 'min_samples_leaf': 18, 'min_samples_split': 13, 'splitter': 'random'}
	Model with rank: 2
		Mean validation score: 0.650 (std: 0.023)
		Parameters: {'criterion': 'gini', 'max_depth': 8, 'min_samples_leaf': 19, 'min_samples_split': 7, 'splitter': 'random'}
	Model with rank: 3
		Mean validation score: 0.650 (std: 0.027)
		Parameters: {'criterion': 'gini', 'max_depth': 6, 'min_samples_leaf': 13, 'min_samples_split': 16, 'splitter': 'random'}

Calculating performance of Decision Tree...
	This classifier doesn't implement decision_function(), thus no precision_recall curve can be generated

******** Scores for Decision Tree (Windows:  10, 5, 10) ******** 

	Hyperparameters: {'criterion': 'gini', 'splitter': 'random', 'max_depth': 5, 'min_samples_split': 13, 'min_samples_leaf': 18},
	roc_auc: 0.634 (+-0.03), recall: 0.048 (+-0.03), specificity: 0.986, precision: 0.450 (+-0.24) 

	Confusion matrix: 	 [4714   66] 
				 [1012   37]


Time elapsed: 1233.1948292255402
