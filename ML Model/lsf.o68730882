Using TensorFlow backend.
Loading dataframes...
Feature matrix already cached!
Feature matrix and labels created!

################# Calculating performance with hyperparameter tuning #################

Doing RandomizedSearchCV with n_iter=1000 for Decision Tree...
******** Scores of best 3 hyperparameter configurations ********
	Model with rank: 1
		Mean validation score: 0.647 (std: 0.014)
		Parameters: {'criterion': 'gini', 'max_depth': 6, 'min_samples_leaf': 12, 'min_samples_split': 10, 'splitter': 'random'}
	Model with rank: 2
		Mean validation score: 0.645 (std: 0.016)
		Parameters: {'criterion': 'gini', 'max_depth': 6, 'min_samples_leaf': 19, 'min_samples_split': 5, 'splitter': 'random'}
	Model with rank: 3
		Mean validation score: 0.645 (std: 0.027)
		Parameters: {'criterion': 'gini', 'max_depth': 3, 'min_samples_leaf': 19, 'min_samples_split': 5, 'splitter': 'random'}

Calculating performance of Decision Tree...
	This classifier doesn't implement decision_function(), thus no precision_recall curve can be generated

******** Scores for Decision Tree (Windows:  10, 5, 10) ******** 

	Hyperparameters: {'criterion': 'gini', 'splitter': 'random', 'max_depth': 6, 'min_samples_split': 10, 'min_samples_leaf': 12},
	roc_auc: 0.626 (+-0.05), recall: 0.078 (+-0.07), specificity: 0.982, precision: 0.463 (+-0.13) 

	Confusion matrix: 	 [4692   88] 
				 [1003   46]


Time elapsed: 146.8693141937256
