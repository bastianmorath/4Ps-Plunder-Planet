Sender: LSF System <lsfadmin@eu-c7-056-07>
Subject: Job 70767687: <python main.py -t 'Nearest Neighbor'> in cluster <euler> Done

Job <python main.py -t 'Nearest Neighbor'> was submitted from host <eu-ms-009-11> by user <morathba> in cluster <euler> at Thu Aug 16 14:30:30 2018.
Job was executed on host(s) <eu-c7-056-07>, in queue <normal.120h>, as user <morathba> in cluster <euler> at Thu Aug 16 14:30:56 2018.
</cluster/home/morathba> was used as the home directory.
</cluster/home/morathba/4Ps-Plunder-Planet/4Ps> was used as the working directory.
Started at Thu Aug 16 14:30:56 2018.
Terminated at Fri Aug 17 05:08:01 2018.
Results reported at Fri Aug 17 05:08:01 2018.

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input
python main.py -t 'Nearest Neighbor'
------------------------------------------------------------

Successfully completed.

Resource usage summary:

    CPU time :                                   54279.57 sec.
    Max Memory :                                 571 MB
    Average Memory :                             443.65 MB
    Total Requested Memory :                     16048.00 MB
    Delta Memory :                               15477.00 MB
    Max Swap :                                   -
    Max Processes :                              3
    Max Threads :                                4
    Run time :                                   52629 sec.
    Turnaround time :                            52651 sec.

The output (if any) follows:

Using TensorFlow backend.
Loading dataframes...
Feature matrix already cached!
Feature matrix and labels created!

################# Calculating performance with hyperparameter tuning #################

Doing RandomizedSearchCV with n_iter=7500 for Nearest Neighbor...
Time elapsed for hyperparameter tuning: 52612.78046441078
******** Scores of best 3 hyperparameter configurations ********
	Model with rank: 1
		Mean validation score: 0.654 (std: 0.040)
		Parameters: {'metric': 'euclidean', 'n_neighbors': 438}
	Model with rank: 1
		Mean validation score: 0.654 (std: 0.040)
		Parameters: {'metric': 'euclidean', 'n_neighbors': 438}
	Model with rank: 1
		Mean validation score: 0.654 (std: 0.040)
		Parameters: {'metric': 'euclidean', 'n_neighbors': 438}
	Model with rank: 1
		Mean validation score: 0.654 (std: 0.040)
		Parameters: {'metric': 'euclidean', 'n_neighbors': 438}

Calculating performance of Nearest Neighbor...
	This classifier doesn't implement decision_function(), thus no precision_recall curve can be generated

******** Scores for Nearest Neighbor (Windows:  10, 5, 10) ******** 

	Hyperparameters: {'n_neighbors': 438, 'metric': 'euclidean'},
	roc_auc: 0.651 (+-0.06), recall: 0.543 (+-0.11), specificity: 0.715 (+-0.10), precision: 0.306 (+-0.09) 

	Confusion matrix: 	 [3418 1362] 
				 [478 571]


Time elapsed: 52617.172112226486
